///Локальные функции
&НаКлиенте
Функция ВставитьПараметры(Адрес,Параметры)
	Адрес = Адрес + "?";
	Для Каждого Параметр Из Параметры Цикл       
		Адрес = Адрес + Параметр.Ключ + "=" + Параметр.Значение + "&";
	КонецЦикла;
	Адрес = Лев(Адрес,СтрДлина(Адрес)-1);
	Возврат Адрес;
КонецФункции
//
&НаКлиенте
Функция ПолучитьИдентификаторШтрихкода(Тип)
	Если Тип = 0 Тогда
		Возврат "auspost";
	ИначеЕсли Тип = 1 Тогда
		Возврат "azteccode";
	ИначеЕсли Тип = 2 Тогда
		Возврат "azteccodecompact";
	ИначеЕсли Тип = 3 Тогда
		Возврат "aztecrune";
	ИначеЕсли Тип = 4 Тогда
		Возврат "bc412";
	ИначеЕсли Тип = 5 Тогда
		Возврат "channelcode";
	ИначеЕсли Тип = 6 Тогда
		Возврат "codablockf";
	ИначеЕсли Тип = 7 Тогда
		Возврат "code11";
	ИначеЕсли Тип = 8 Тогда
		Возврат "code128";
	ИначеЕсли Тип = 9 Тогда
		Возврат "code16k";
	ИначеЕсли Тип = 10 Тогда
		Возврат "code2of5";
	ИначеЕсли Тип = 11 Тогда
		Возврат "code32";
	ИначеЕсли Тип = 12 Тогда
		Возврат "code39";
	ИначеЕсли Тип = 13 Тогда
		Возврат "code39ext";
	ИначеЕсли Тип = 14 Тогда
		Возврат "code49";
	ИначеЕсли Тип = 15 Тогда
		Возврат "code93";
	ИначеЕсли Тип = 16 Тогда
		Возврат "code93ext";
	ИначеЕсли Тип = 17 Тогда
		Возврат "codeone";
	ИначеЕсли Тип = 18 Тогда
		Возврат "coop2of5";
	ИначеЕсли Тип = 19 Тогда
		Возврат "daft";
	ИначеЕсли Тип = 20 Тогда
		Возврат "databarexpanded";
	ИначеЕсли Тип = 21 Тогда
		Возврат "databarexpandedcomposite";
	ИначеЕсли Тип = 22 Тогда
		Возврат "databarexpandedstacked";
	ИначеЕсли Тип = 23 Тогда
		Возврат "databarexpandedstackedcomposite";
	ИначеЕсли Тип = 24 Тогда
		Возврат "databarlimited";
	ИначеЕсли Тип = 25 Тогда
		Возврат "databarlimitedcomposite";
	ИначеЕсли Тип = 26 Тогда
		Возврат "databaromni";
	ИначеЕсли Тип = 27 Тогда
		Возврат "databaromnicomposite";
	ИначеЕсли Тип = 28 Тогда
		Возврат "databarstacked";
	ИначеЕсли Тип = 29 Тогда
		Возврат "databarstackedcomposite";
	ИначеЕсли Тип = 30 Тогда
		Возврат "databarstackedomni";
	ИначеЕсли Тип = 31 Тогда
		Возврат "databarstackedomnicomposite";
	ИначеЕсли Тип = 32 Тогда
		Возврат "databartruncated";
	ИначеЕсли Тип = 33 Тогда
		Возврат "databartruncatedcomposite";
	ИначеЕсли Тип = 34 Тогда
		Возврат "datalogic2of5";
	ИначеЕсли Тип = 35 Тогда
		Возврат "datamatrix";
	ИначеЕсли Тип = 36 Тогда
		Возврат "datamatrixrectangular";
	ИначеЕсли Тип = 37 Тогда
		Возврат "datamatrixrectangularextension";
	ИначеЕсли Тип = 38 Тогда
		Возврат "dotcode";
	ИначеЕсли Тип = 39 Тогда
		Возврат "ean13";
	ИначеЕсли Тип = 40 Тогда
		Возврат "ean13composite";
	ИначеЕсли Тип = 41 Тогда
		Возврат "ean14";
	ИначеЕсли Тип = 42 Тогда
		Возврат "ean2";
	ИначеЕсли Тип = 43 Тогда
		Возврат "ean5";
	ИначеЕсли Тип = 44 Тогда
		Возврат "ean8";
	ИначеЕсли Тип = 45 Тогда
		Возврат "ean8composite";
	ИначеЕсли Тип = 46 Тогда
		Возврат "flattermarken";
	ИначеЕсли Тип = 47 Тогда
		Возврат "gs1-128";
	ИначеЕсли Тип = 48 Тогда
		Возврат "gs1-128composite";
	ИначеЕсли Тип = 49 Тогда
		Возврат "gs1-cc";
	ИначеЕсли Тип = 50 Тогда
		Возврат "gs1datamatrix";
	ИначеЕсли Тип = 51 Тогда
		Возврат "gs1datamatrix";
	ИначеЕсли Тип = 52 Тогда
		Возврат "gs1dotcode";
	ИначеЕсли Тип = 53 Тогда
		Возврат "gs1northamericancoupon";
	ИначеЕсли Тип = 54 Тогда
		Возврат "gs1qrcode";
	ИначеЕсли Тип = 55 Тогда
		Возврат "hanxin";
	ИначеЕсли Тип = 56 Тогда
		Возврат "hibcazteccode";
	ИначеЕсли Тип = 57 Тогда
		Возврат "hibccodablockf";
	ИначеЕсли Тип = 58 Тогда
		Возврат "hibccode128";
	ИначеЕсли Тип = 59 Тогда
		Возврат "hibccode39";
	ИначеЕсли Тип = 60 Тогда
		Возврат "hibcdatamatrix";
	ИначеЕсли Тип = 61 Тогда
		Возврат "hibcdatamatrixrectangular";
	ИначеЕсли Тип = 62 Тогда
		Возврат "hibcmicropdf417";
	ИначеЕсли Тип = 63 Тогда
		Возврат "hibcpdf417";
	ИначеЕсли Тип = 64 Тогда
		Возврат "hibcqrcode";
	ИначеЕсли Тип = 65 Тогда
		Возврат "iata2of5";
	ИначеЕсли Тип = 66 Тогда
		Возврат "identcode";
	ИначеЕсли Тип = 67 Тогда
		Возврат "industrial2of5";
	ИначеЕсли Тип = 68 Тогда
		Возврат "interleaved2of5";
	ИначеЕсли Тип = 69 Тогда
		Возврат "isbn";
	ИначеЕсли Тип = 70 Тогда
		Возврат "ismn";
	ИначеЕсли Тип = 71 Тогда
		Возврат "issn";
	ИначеЕсли Тип = 72 Тогда
		Возврат "itf14";
	ИначеЕсли Тип = 73 Тогда
		Возврат "japanpost";
	ИначеЕсли Тип = 74 Тогда
		Возврат "kix";
	ИначеЕсли Тип = 75 Тогда
		Возврат "leitcode";
	ИначеЕсли Тип = 76 Тогда
		Возврат "mailmark";
	ИначеЕсли Тип = 77 Тогда
		Возврат "matrix2of5";
	ИначеЕсли Тип = 78 Тогда
		Возврат "matrix2of5";
	ИначеЕсли Тип = 79 Тогда
		Возврат "micropdf417";
	ИначеЕсли Тип = 80 Тогда
		Возврат "microqrcode";
	ИначеЕсли Тип = 81 Тогда
		Возврат "msi";
	ИначеЕсли Тип = 82 Тогда
		Возврат "onecode";
	ИначеЕсли Тип = 83 Тогда
		Возврат "pdf417";
	ИначеЕсли Тип = 84 Тогда
		Возврат "pdf417compact";
	ИначеЕсли Тип = 85 Тогда
		Возврат "pharmacode";
	ИначеЕсли Тип = 86 Тогда
		Возврат "pharmacode2";
	ИначеЕсли Тип = 87 Тогда
		Возврат "planet";
	ИначеЕсли Тип = 88 Тогда
		Возврат "plessey";
	ИначеЕсли Тип = 89 Тогда
		Возврат "posicode";
	ИначеЕсли Тип = 90 Тогда
		Возврат "postnet";
	ИначеЕсли Тип = 91 Тогда
		Возврат "pzn";
	ИначеЕсли Тип = 92 Тогда
		Возврат "qrcode";
	ИначеЕсли Тип = 93 Тогда
		Возврат "rationalizedCodabar";
	ИначеЕсли Тип = 94 Тогда
		Возврат "raw";
	ИначеЕсли Тип = 95 Тогда
		Возврат "rectangularmicroqrcode";
	ИначеЕсли Тип = 96 Тогда
		Возврат "royalmail";
	ИначеЕсли Тип = 97 Тогда
		Возврат "sscc18";
	ИначеЕсли Тип = 98 Тогда
		Возврат "symbol";
	ИначеЕсли Тип = 99 Тогда
		Возврат "telepen";
	ИначеЕсли Тип = 100 Тогда
		Возврат "telepennumeric";
	ИначеЕсли Тип = 101 Тогда
		Возврат "ultracode";
	ИначеЕсли Тип = 102 Тогда
		Возврат "upca";
	ИначеЕсли Тип = 103 Тогда
		Возврат "upcacomposite";
	ИначеЕсли Тип = 104 Тогда
		Возврат "upce";
	ИначеЕсли Тип = 105 Тогда
		Возврат "upcecomposite";
	КонецЕсли;
КонецФункции
//
&НаКлиенте
Функция ОбработатьОтвет(Ответ)
	Если Ответ.КодСостояния >= 200 И Ответ.КодСостояния <= 299 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

///Глобальные функции
&НаКлиенте
Функция СгенерироватьШтрихКод(Тип,ШтрихКод) Экспорт	
	HTTPСоединение = Новый HTTPСоединение("bwipjs-api.metafloor.com");
	Заголовки = Новый Соответствие;
	Параметры = Новый Структура;
	Параметры.Вставить("bcid",ПолучитьИдентификаторШтрихкода(Тип));
	Параметры.Вставить("text",Строка(ШтрихКод));
	HTTPЗапрос = Новый HTTPЗапрос(ВставитьПараметры("",Параметры),Заголовки);
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET",HTTPЗапрос);
	Если ОбработатьОтвет(Ответ) Тогда
		ДД = Ответ.ПолучитьТелоКакДвоичныеДанные();
		Адрес = ПоместитьВоВременноеХранилище(ДД);
		Возврат Адрес;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
